name: Dev-updated Java CI with Maven
#on: workflow_dispatch
on:
  push:
    branches: [ dev ]
#  pull_request:
#    branches: [ main ]

jobs: 
  envbranch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check the branch and select the envirnoment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "env_name=Dev" >> $GITHUB_OUTPUT
          fi
      - name: Use variable setup in previous step
        run: echo "Using envirnoment ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }} 
  deployOnDev:  
    runs-on: ubuntu-latest
    needs: envbranch
    
    environment: ${{ needs.envbranch.outputs.env_name }}
      #name: ${{ needs.envbranch.outputs.env_name }}  
    env:
      DUPLO_HOST: ${{ vars.DUPLO_HOST }}
      SERVICE_NAME: ${{ vars.SERVICE_NAME }} 
    steps:
      - name: print vars values
        run: |
          echo "$DUPLO_HOST"
          echo "$SERVICE_NAME"
      - name: Deploy on Dev
        run: echo "deploying in $DUPLO_HOST env...."
  deployQA:
    runs-on: ubuntu-latest
    needs: 
      - envbranch
      - deployOnDev
      
    environment:
      name: QA
    env:
      DUPLO_HOST: ${{ vars.DUPLO_HOST }}
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}
    steps:    
      # Update the backend service to use the new image.
      - name: Deploy on QA
        run: echo "deploying in $DUPLO_HOST env...."
  deployProd:
    runs-on: ubuntu-latest
    needs: 
      - envbranch
      - deployOnDev
      - deployQA
    if: ${{ always() }}
    environment:
      name: Prod
    env:
      DUPLO_HOST: ${{ vars.DUPLO_HOST }}
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}
    steps:    
      # Update the backend service to use the new image.
      - name: Deploy on Prod
        run: echo "deploying in $DUPLO_HOST env...."
