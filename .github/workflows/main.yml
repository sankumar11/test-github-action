name: Versioning check
on:
#  push:
#    branches: [ main ]
  pull_request:
    types:
      - closed
    branches: [ main ]

jobs: 
  envbranch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check the branch and select the envirnoment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=prod" >> $GITHUB_OUTPUT
          fi
      - name: Use variable setup in previous step
        run: echo "Using envirnoment ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }} 
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Current Version Code
        env:
          ANDROID_VERSION_CODE: ${{ vars.ANDROID_VERSION_CODE }} # Load from GitHub Secrets
        run: |
          # Get the current versionCode
          currentVersionCode=$(cat version.env)
          newVersionCode=$((currentVersionCode + 1))
          
          echo "Current versionCode: $currentVersionCode"
          echo "New versionCode: $newVersionCode"

          # Update build.gradle with the new versionCode
          #echo "$newVersionCode" > version.env

          # Save the new versionCode back to GitHub Actions environment
          #echo "ANDROID_VERSION_CODE=$newVersionCode" >> $GITHUB_ENV

          #echo "New versionCode updated in build.gradle and GitHub Actions environment."  
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying on Prod...."
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: user/app:latest


        
